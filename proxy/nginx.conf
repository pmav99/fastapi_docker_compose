# vim: set ft=nginx:

# Sources:
# https://www.patricksoftwareblog.com/how-to-configure-nginx-for-a-flask-web-application/
# https://docs.gunicorn.org/en/latest/deploy.html

# Define the user that will own and run the Nginx server
user  nginx;

# Define the number of worker processes; recommended value is the number of
# cores that are being used by your server
worker_processes  1;

# Define the location on the file system of the error log, plus the minimum
# severity to log messages for
error_log  /var/log/nginx/error.log warn;

# Define the file that will store the process ID of the main NGINX process
pid        /var/run/nginx.pid;

# events block defines the parameters that affect connection processing.
events {
  # Define the maximum number of simultaneous connections that can be opened
  # by a worker process increase if you have lots of clients
  worker_connections 1024;

  # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX

  # It looks like accept_mutex controls whether 1 connection can wake multiple workers
  accept_mutex        off;

  # multi_accept controls whether 1 worker can accept multiple connections.
  multi_accept        off;
}

# http block defines the parameters for how NGINX should handle HTTP web traffic
http {
  # Include the file defining the list of file types that are supported by NGINX
  include               /etc/nginx/mime.types;
  # Define the default file type that is returned to the user
  default_type          application/octet-stream;

  # Define the format of log messages.
  log_format            main '$remote_addr - $remote_user [$time_local] "$request" '
                             '$status $body_bytes_sent "$http_referer" '
                             '"$http_user_agent" "$http_x_forwarded_for"';

  # Define the location of the log of access attempts to NGINX
  access_log            /var/log/nginx/access.log  main;

  # Define the parameters to optimize the delivery of static content
  # https://thoughts.t37.net/nginx-optimization-understanding-sendfile-tcp-nodelay-and-tcp-nopush-c55cdd276765
  sendfile              on;
  tcp_nopush            on;
  tcp_nodelay           on;

  # Define the timeout value for keep-alive connections with the client
  # https://forum.nginx.org/read.php?2,267666,267676
  # https://www.tweaked.io/guide/general/webservers/
  keepalive_timeout     5;

  # Define the usage of the gzip compression algorithm to reduce the
  # amount of data to transmit
  #gzip  on;

  # Include additional parameters for virtual host(s)/server(s)
  include /etc/nginx/conf.d/*.conf;
}
